name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Sonarscanner for dotnet
        uses: Secbyte/dotnet-sonarscanner@v1.2
        with:
          buildCommand: dotnet build .
          testCommand: dotnet test .
          projectKey: JoanStinson_TicTacToeTDD
          projectName: TicTacToeTDD
          sonarOrganisation: joanstinson
          beginArguments: /d:sonar.verbose="true" /d:sonar.cs.opencover.reportsPaths="/path/to/coverage.xml" /d:sonar.coverage.exclusions="**/*.cs"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL
          unityVersion: 2020.3.25f1
          # adding allowDirtyBuild here fixed it for me!
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build